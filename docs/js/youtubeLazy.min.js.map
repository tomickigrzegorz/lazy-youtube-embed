{"version":3,"file":"youtubeLazy.min.js","sources":["../../sources/js/utils/function.ts","../../sources/js/index.ts"],"sourcesContent":["/**\r\n * Create picure or source element\r\n *\r\n * @param el - type of element\r\n * @param config - config element\r\n * @returns {HTMLElement}\r\n */\r\nconst createElement = (el: string, config?: object | string): HTMLElement => {\r\n  const element = document.createElement(el);\r\n  if (config) {\r\n    setAttribute(\r\n      element,\r\n      typeof config === \"string\" ? { class: config } : config\r\n    );\r\n  }\r\n  return element;\r\n};\r\n\r\n/**\r\n * @param element - element html\r\n * @param config - attributes\r\n */\r\nconst setAttribute = (element: HTMLElement, config?: LooseObject) => {\r\n  for (var key in config) {\r\n    element.setAttribute(key, config[key]);\r\n  }\r\n};\r\n\r\n/**\r\n * @param object - object\r\n */\r\nconst parseJson = (object: any) => JSON.parse(object);\r\n\r\n/**\r\n * @returns red button\r\n */\r\nconst createRedButton = () => createElement(\"div\", \"ytLazy__img--svg\");\r\n\r\nexport { createElement, setAttribute, parseJson, createRedButton };\r\n","import {\r\n  createElement,\r\n  createRedButton,\r\n  parseJson,\r\n  setAttribute,\r\n} from \"./utils/function\";\r\n\r\nexport default class ytLazy {\r\n  private _className: string;\r\n  private _overLayer: HTMLElement;\r\n  private _link: string;\r\n  private _background?: string;\r\n  private _picture?: boolean;\r\n  private _local?: boolean;\r\n  private _overflow?: boolean;\r\n  private _maxWidth?: number;\r\n  private _createWatchIn?: Function;\r\n\r\n  constructor(\r\n    classElement: string,\r\n    {\r\n      background = \"rgba(0,0,0,0.9)\",\r\n      maxWidth = 90,\r\n      overflow = false,\r\n      local = true,\r\n      picture = false,\r\n      createWatchIn = () => {},\r\n    }: ConstructorObject\r\n  ) {\r\n    this._className = classElement;\r\n    this._background = background;\r\n    this._local = local;\r\n    this._overflow = overflow;\r\n    this._picture = picture;\r\n    this._maxWidth = maxWidth;\r\n    this._createWatchIn = createWatchIn;\r\n    this._link = \"https://www.youtube.com\";\r\n\r\n    this._overLayer = createElement(\"div\", \"ytLight\");\r\n\r\n    document.body.appendChild(this._overLayer);\r\n\r\n    this._initial();\r\n  }\r\n\r\n  _initial = () => {\r\n    const getYTLazy = document.querySelectorAll(`.${this._className}`);\r\n\r\n    for (let i = 0; i < getYTLazy.length; i++) {\r\n      const { id, openIn, title, picture } = parseJson(\r\n        getYTLazy[i].getAttribute(\"data-yt\")\r\n      );\r\n\r\n      // add image\r\n      getYTLazy[i].appendChild(this._createImage(id, picture));\r\n\r\n      // add red button\r\n      getYTLazy[i].appendChild(createRedButton());\r\n\r\n      if (title ?? false) {\r\n        const titleElement = createElement(\"div\", \"ytLazy__title\");\r\n        titleElement.textContent = title;\r\n        getYTLazy[i].insertAdjacentElement(\"beforeend\", titleElement);\r\n        titleElement.insertAdjacentElement(\r\n          \"afterend\",\r\n          createElement(\"div\", \"ytLazy__gradient-top\")\r\n        );\r\n      }\r\n\r\n      if (openIn && this._createWatchIn) {\r\n        this._createWatchIn({\r\n          index: i,\r\n          link: this._link + \"/watch?v=\" + id,\r\n          template: (template: string) => {\r\n            getYTLazy[i].insertAdjacentHTML(\"beforeend\", template);\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    this._handEvent();\r\n  };\r\n\r\n  /**\r\n   * Create image or picture width image\r\n   *\r\n   * @param id - id video\r\n   * @returns {HTMLImageElement}\r\n   */\r\n  _createImage = (id: string, pic: string | null): HTMLElement => {\r\n    const sourcesArray: ConfigObject[] = [\r\n      {\r\n        media: \"(min-width: 1440px)\",\r\n        srcset: this._sourceURL(id, \"maxresdefault\"),\r\n      },\r\n      {\r\n        media: \"(min-width: 1024px)\",\r\n        srcset: this._sourceURL(id, \"hqdefault\"),\r\n      },\r\n      {\r\n        media: \"(min-width: 480px)\",\r\n        srcset: this._sourceURL(id, \"mqdefault\"),\r\n      },\r\n    ];\r\n\r\n    const picture = createElement(\"picture\");\r\n    sourcesArray.map((element: object) => {\r\n      picture.appendChild(createElement(\"source\", element));\r\n    });\r\n\r\n    const image = new Image();\r\n    image.className = \"ytLazy__image\";\r\n    image.loading = \"lazy\";\r\n    image.width = 1050;\r\n    image.height = 787;\r\n    image.src = this._sourceURL(id, \"sddefault\");\r\n\r\n    picture.appendChild(image);\r\n\r\n    return this._picture || pic ? picture : image;\r\n  };\r\n\r\n  /**\r\n   * Image url\r\n   *\r\n   * @param id - movie\r\n   * @param type - image size\r\n   * @returns {HTMLImageElement}\r\n   */\r\n  _sourceURL = (id: string, type: string): string => {\r\n    return `//i.ytimg.com/vi/${id}/${type}.jpg`;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param target - target element\r\n   */\r\n  _setLightbox = (target: HTMLElement) => {\r\n    const watchIn = target.closest(\".ytLazy__watch-in-link\");\r\n    if (watchIn) return;\r\n\r\n    const element = target.closest(\".ytLazy__item\");\r\n\r\n    if (element === null || element.className !== this._className) return;\r\n\r\n    const { id, local, maxWidth } = parseJson(element.getAttribute(\"data-yt\"));\r\n\r\n    if (local ?? this._local) {\r\n      const frame = createElement(\"iframe\", this._objectIframe(id, this._link));\r\n      setAttribute(frame, {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      });\r\n\r\n      element.textContent = \"\";\r\n      element.appendChild(frame);\r\n\r\n      return;\r\n    } else {\r\n      this._lightbox({ id, maxWidth });\r\n    }\r\n  };\r\n\r\n  // close lightbox\r\n  _closeLightbox = () => {\r\n    const isOpen = document.querySelector(\".ytLazy-is-open\");\r\n    if (!isOpen) return;\r\n    isOpen.textContent = \"\";\r\n    isOpen.classList.remove(\"ytLazy-is-open\");\r\n    this._overflow && document.body.classList.remove(\"ytLight-active\");\r\n  };\r\n\r\n  _handClick = (event: Event) => {\r\n    event.stopPropagation();\r\n    const { target } = event;\r\n\r\n    this._closeLightbox();\r\n    this._setLightbox(<HTMLElement>target);\r\n  };\r\n\r\n  _handKey = (event: KeyboardEvent) => {\r\n    if (event.key !== \"Escape\") return;\r\n    this._setLightbox(<HTMLElement>event.target);\r\n    this._closeLightbox();\r\n  };\r\n\r\n  _handEvent = () => {\r\n    window.addEventListener(\"click\", this._handClick);\r\n    window.addEventListener(\"keydown\", this._handKey);\r\n  };\r\n\r\n  _objectIframe = (id: string, link: string): object => {\r\n    return {\r\n      frameborder: \"0\",\r\n      allowfullscreen: \"true\",\r\n      allow:\r\n        \"accelerometer;autoplay;encrypted-media;gyroscope;picture-in-picture;\",\r\n      src: `${link}/embed/${id}?autoplay=1`,\r\n    };\r\n  };\r\n\r\n  _lightbox = ({ id, maxWidth }: lightboxObject) => {\r\n    if (this._overflow) {\r\n      document.body.classList.add(\"ytLight-active\");\r\n    }\r\n\r\n    const button = createElement(\"button\", \"ytLight-close\");\r\n    setAttribute(button, {\r\n      type: \"button\",\r\n      title: \"close movie\",\r\n    });\r\n\r\n    const wrap = createElement(\"div\", \"ytLight-wrap\");\r\n    const container = createElement(\"div\", \"ytLight-container\");\r\n\r\n    (this._maxWidth || maxWidth) &&\r\n      setAttribute(container, {\r\n        style: `max-width: ${maxWidth || this._maxWidth}%`,\r\n      });\r\n\r\n    const iframCointainer = createElement(\"div\", \"ytLight-iframe\");\r\n\r\n    iframCointainer.appendChild(\r\n      createElement(\"iframe\", this._objectIframe(id, this._link))\r\n    );\r\n    container.appendChild(iframCointainer);\r\n    wrap.appendChild(container);\r\n\r\n    iframCointainer.insertAdjacentElement(\"afterend\", button);\r\n\r\n    this._overLayer.appendChild(wrap);\r\n    this._overLayer.classList.add(\"ytLazy-is-open\");\r\n    this._overLayer.setAttribute(\"style\", `background:${this._background};`);\r\n  };\r\n}\r\n"],"names":["createElement","el","config","element","document","setAttribute","class","key","parseJson","object","JSON","parse","[object Object]","classElement","background","maxWidth","overflow","local","picture","createWatchIn","this","getYTLazy","querySelectorAll","_className","i","length","id","openIn","title","getAttribute","appendChild","_createImage","titleElement","textContent","insertAdjacentElement","_createWatchIn","index","link","_link","template","insertAdjacentHTML","_handEvent","pic","sourcesArray","media","srcset","_sourceURL","map","image","Image","className","loading","width","height","src","_picture","type","target","closest","_local","frame","_objectIframe","_lightbox","isOpen","querySelector","classList","remove","_overflow","body","event","stopPropagation","_closeLightbox","_setLightbox","window","addEventListener","_handClick","_handKey","frameborder","allowfullscreen","allow","add","button","wrap","container","_maxWidth","style","iframCointainer","_overLayer","_background","_initial"],"mappings":"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"}